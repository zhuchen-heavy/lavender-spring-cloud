
server:
  port: 8080

## 一：参考：https://www.fangzhipeng.com/springcloud/2018/12/05/sc-f-gateway2.html

### 1：test 2 ：时间的断言路由

#spring:
#  profiles:
#    active: after_route
#
## 注：在application.yml再建一个配置文件，语法是三个横线，在此配置文件中通过spring.profiles来配置文件名，和spring.profiles.active一致
#---
#
#spring:
#  cloud:
#    gateway:
#      routes:
#      - id: after_route # id需要唯一
#        uri: http://httpbin.org:80/get
#        predicates:
#        - After=2017-01-20T17:42:47.789-07:00[America/Denver]
#  profiles: after_route

#######################################################################################

### 2：test 3 ：header的断言路由

#spring:
#  profiles:
#    active: header_route
#
#---
#
#spring:
#  cloud:
#    gateway:
#      routes:
#      - id: header_route
#        uri: http://httpbin.org:80/get
#        predicates:
#        - Header=X-Request-Id, \d+
#  profiles: header_route

#######################################################################################

### 3：test 4 ：cookie的断言路由

#spring:
#  profiles:
#    active: cookie_route
#
#---
#
#spring:
#  cloud:
#    gateway:
#      routes:
#      - id: cookie_route
#        uri: http://httpbin.org:80/get
#        predicates:
#        - Cookie=name, forezp
#  profiles: cookie_route

#######################################################################################

### 4：test 5 ：Host的路由断言

#spring:
#  profiles:
#    active: host_route
#
#---
#
#spring:
#  cloud:
#    gateway:
#      routes:
#      - id: host_route
#        uri: http://httpbin.org:80/get
#        predicates:
#        - Host=**.fangzhipeng.com
#  profiles: host_route

#######################################################################################

### 5：test 6 ：Method类型的路由断言

#spring:
#  profiles:
#    active: method_route
#
#---
#
#spring:
#  cloud:
#    gateway:
#      routes:
#      - id: method_route
#        uri: http://httpbin.org:80/get
#        predicates:
#        - Method=GET
#  profiles: method_route

#######################################################################################

### 6：test 7 ：path的路由断言

#spring:
#  profiles:
#    active: path_route
#
#---
#
#spring:
#  cloud:
#    gateway:
#      routes:
#      - id: path_route
#        uri: http://httpbin.org:80/get
#        predicates:
#        - Path=/foo/{segment}
#  profiles: path_route

#######################################################################################

### 7：test 8 ：Get请求查询参数的路由断言

#spring:
#  profiles:
#    active: query_route
#
#---
#
#spring:
#  cloud:
#    gateway:
#      routes:
#      - id: query_route
#        uri: http://httpbin.org:80/get
#        predicates: # http://localhost:8080?foo=bar 能被转发。ba. ：表示以ba开发的请求均能被转发
#        - Query=foo, ba.
#  profiles: query_route

## 二：参考：https://www.fangzhipeng.com/springcloud/2018/12/21/sc-f-gatway3.html

### 1：test 9 ：AddRequestHeaderGatewayFilterFactory 工厂使用

#spring:
#  profiles:
#    active: add_request_header_route
#
#---
#
#spring:
#  cloud:
#    gateway:
#      routes:
#      - id: add_request_header_route
#        uri: http://httpbin.org:80/get # 在chrome上是输入：http://localhost:8080/get ，能被转发到 http://httpbin.org:80/get
#        filters:
#        - AddRequestHeader=X-Request-Foo, Bar  # AddRequestHeaderGatewayFilterFactory的简写即可
##        - AddResponseHeader=A, B
#        predicates:
#        - After=2017-01-20T17:42:47.789-07:00[America/Denver]
#  profiles: add_request_header_route

#######################################################################################

### 1：test 10 ：RewritePathGatewayFilterFactory 工厂使用

#spring:
#  profiles:
#    active: rewritepath_route
#
#---
#
#spring:
#  cloud:
#    gateway:
#      routes:
#      - id: rewrite_path_route
#        uri: https://blog.csdn.net
#        filters:
#        - RewritePath=/foo/(?<segment>.*), /$\{segment}
#        predicates:
#        - Path=/foo/**
#  profiles: rewritepath_route

#######################################################################################

### 2：test 11 ：自定义过滤器工厂的使用

spring:
  profiles:
    active: request_time_route

---

spring:
  cloud:
    gateway:
      routes:
      - id: request_time_route
        uri: http://httpbin.org:80/get
        filters:
        - RequestTime=false
        predicates:
        - After=2017-01-20T17:42:47.789-07:00[America/Denver]
  profiles: request_time_route